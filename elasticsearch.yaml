heat_template_version: 2013-05-23

description: |
  This is a Heat template to deploy an elasticsearch cluster on the
  Rackspace Cloud.

parameter_groups:

- label: Server Settings
  parameters:
  - flavor
  - es_node_count

- label: Elasticsearch Settings
  parameters:
  - es_auth_user

- label: rax-dev-params
  parameters:
  - load_balancer_hostname
  - server_hostname
  - child_template
  - kitchen
  - chef_version

parameters:

  flavor:
    label: Server Size
    description: |
      Rackspace Cloud Server flavor to use. The size is based on the amount of
      RAM for the provisioned server.
    type: string
    default: 2 GB General Purpose v1
    constraints:
    - allowed_values:
      - 2 GB General Purpose v1
      - 4 GB General Purpose v1
      - 8 GB General Purpose v1
      - 15 GB I/O v1
      - 30 GB I/O v1
      - 512MB Standard Instance
      - 1GB Standard Instance
      - 2GB Standard Instance
      - 4GB Standard Instance
      - 8GB Standard Instance
      - 15GB Standard Instance
      - 30GB Standard Instance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.

  load_balancer_hostname:
    label: Load Balancer Name
    description: Hostname for load balancer
    type: string
    default: elasticsearch-lb

  server_hostname:
    label: Server Name
    description: Hostname for the servers
    type: string
    default: elasticsearch-%index%

  es_node_count:
    label: Number of Servers
    description: Number of Elasticsearch nodes to create
    type: number
    default: 2

  es_auth_user:
    label: Username
    description: |
      User name for authentication with the Elasticsearch endpoint. A password
      will be automatically generated.
    type: string
    default: es_user

  child_template:
    label: Child Template
    description: |
      URL to the Child template that will provision Elasticsearch nodes.
    type: string
    default: https://raw.githubusercontent.com/rydn/es_rax/master/elasticsearch_node.yaml

  kitchen:
    label: Kitchen
    description: URL for the kitchen to use
    type: string
    default: https://github.com/rydn/es_rax

  chef_version:
    label: Chef Version
    description: Version of chef client to use
    type: string
    default: 11.12.8

resources:

  ssh_key:
    type: "OS::Nova::KeyPair"
    properties:
      name: { get_param: "OS::stack_id" }
      save_private_key: true

  load_balancer:
    type: "Rackspace::Cloud::LoadBalancer"
    depends_on:
      - es_nodes
    properties:
      name: { get_param: load_balancer_hostname }
      nodes:
      - addresses: { get_attr: [es_nodes, es_private_ip] }
        port: 8080
        condition: ENABLED
      healthMonitor:
        type: CONNECT
        delay: 10
        timeout: 5
        attemptsBeforeDeactivation: 1
      port: 8080
      protocol: HTTP
      algorithm: ROUND_ROBIN
      contentCaching: DISABLED
      virtualIps:
      - type: PUBLIC
        ipVersion: IPV4

  es_network:
    type: Rackspace::Cloud::Network
    properties:
      label: es_network
      cidr: 192.168.134.0/24

  es_password:
    type: OS::Heat::RandomString
    properties:
      length: 16
      sequence: lettersdigits

  es_nodes:
    type: "OS::Heat::ResourceGroup"
    properties:
      count: { get_param: es_node_count }
      resource_def:
        type: { get_param: child_template }
        properties:
          stack_id:         { get_param: "OS::stack_id" }
          flavor:           { get_param: flavor }
          server_hostname:  { get_param: server_hostname }
          ssh_keypair_name: { get_resource: ssh_key }
          ssh_private_key:  { get_attr: [ssh_key, private_key] }
          es_network_id:    { get_resource: es_network }
          es_password:      { get_attr: [es_password, value] }
          es_auth_user:     { get_param: es_auth_user }
          kitchen:          { get_param: kitchen }
          chef_version:     { get_param: chef_version }

outputs:
  private_key:
    value: { get_attr: [ssh_key, private_key] }
    description: "SSH Private Key"

  es_auth_user:
    value: { get_param: es_auth_user }
    description: "Elasticsearch Admin User"

  es_password:
    value: { get_attr: [es_password, value] }
    description: "Elasticsearch Admin Password"

  load_balancer_ip:
    value: { get_attr: [load_balancer, PublicIp] }
    description: "Load Balancer IP"

  es_server_ips:
    value: { get_attr: [es_nodes, es_server_ip] }
    description: "Elasticsearch Server IPs"

  es_url:
    description: Elasticsearch URL
    value:
      str_replace:
        template: "http://%server_ip%:8080"
        params:
          "%server_ip%": { get_attr: [load_balancer, PublicIp] }
